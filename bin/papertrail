#!/usr/bin/env ruby

require 'optparse'
require 'yaml'

require 'papertrail-cli'

class PapertrailSearch
  def run
    options = {
      :configfile => configfile_path,
      :delay  => 10,
      :follow => false
    }

    OptionParser.new do |opts|
      opts.banner = "papertrail - command-line tail and search for Papertrail log management service"

      opts.on("-h", "--help", "Show usage") do |v|
        puts opts
        exit
      end
      opts.on("-f", "--follow", "Continue running and print new events (off)") do |v|
        options[:follow] = true
      end
      opts.on("-d", "--delay SECONDS", "Delay between refresh (3)") do |v|
        options[:delay] = v.to_i
      end
      opts.on("-c", "--configfile PATH", "Path to config (~/.papertrail.yml)") do |v|
        options[:configfile] = File.expand_path(v)
      end

      opts.separator usage
    end.parse!

    configfile_options = open(options[:configfile]) do |f|
      YAML.load(f)
    end
    configfile_options = symbolize_keys(configfile_options)
    options.merge!(configfile_options)

    client = Papertrail::SearchClient.new(options)

    search_and_print(client)

    if options[:follow]
      loop do
        sleep options[:delay]
        search_and_print(client)
      end
    end
  end

  def search_and_print(client)
    events = client.search(ARGV[0])
    return unless events

    Papertrail::SearchClient.format_events(events) do |e|
      puts e
      $stdout.flush
    end
  end

  def configfile_path
    if File.exists?(file_name = '.papertrail.yml')
      file_path = File.expand_path(file_name)
    else
      file_path = File.expand_path('~/.papertrail.yml')
    end

    file_path
  end

  def symbolize_keys(hash)
    new_hash = {}
    hash.each_key do |key|
      new_hash[(key.to_sym rescue key) || key] = hash[key]
    end
    new_hash
  end

  def usage
    <<EOF

Usage: papertrail [-f] [-d seconds] [-c /path/to/papertrail.yml] [query]

Examples:
  papertrail -f
  papertrail something
  papertrail 1.2.3 Failure
  papertrail -f "(www OR db) (nginx OR pgsql) -accepted"
  papertrail -f -d 10 "ns1 OR 'connection refused'"

More: https://papertrailapp.com/

EOF
  end
end

begin
  PapertrailSearch.new.run
rescue Interrupt
  exit(0)
end
